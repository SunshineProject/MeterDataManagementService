package it.sinergis.sunshine.sos40.pojo;
// Generated 3-feb-2015 15.58.44 by Hibernate Tools 3.4.0.CR1


import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Featureofinterest generated by hbm2java
 */
@Entity
@Table(name="featureofinterest"
    , uniqueConstraints = {@UniqueConstraint(columnNames="url"), @UniqueConstraint(columnNames="identifier")} 
)
public class Featureofinterest  implements java.io.Serializable {


     private long featureofinterestid;
     private Codespace codespace;
     private Featureofinteresttype featureofinteresttype;
     private char hibernatediscriminator;
     private String identifier;
     private String name;
     private Serializable geom;
     private String descriptionxml;
     private String url;
     private Set relatedfeatures = new HashSet(0);
     private Set featurerelationsForParentfeatureid = new HashSet(0);
     private Set resulttemplates = new HashSet(0);
     private Set serieses = new HashSet(0);
     private Set featurerelationsForChildfeatureid = new HashSet(0);

    public Featureofinterest() {
    }

	
    public Featureofinterest(long featureofinterestid, Featureofinteresttype featureofinteresttype, char hibernatediscriminator) {
        this.featureofinterestid = featureofinterestid;
        this.featureofinteresttype = featureofinteresttype;
        this.hibernatediscriminator = hibernatediscriminator;
    }
    public Featureofinterest(long featureofinterestid, Codespace codespace, Featureofinteresttype featureofinteresttype, char hibernatediscriminator, String identifier, String name, Serializable geom, String descriptionxml, String url, Set relatedfeatures, Set featurerelationsForParentfeatureid, Set resulttemplates, Set serieses, Set featurerelationsForChildfeatureid) {
       this.featureofinterestid = featureofinterestid;
       this.codespace = codespace;
       this.featureofinteresttype = featureofinteresttype;
       this.hibernatediscriminator = hibernatediscriminator;
       this.identifier = identifier;
       this.name = name;
       this.geom = geom;
       this.descriptionxml = descriptionxml;
       this.url = url;
       this.relatedfeatures = relatedfeatures;
       this.featurerelationsForParentfeatureid = featurerelationsForParentfeatureid;
       this.resulttemplates = resulttemplates;
       this.serieses = serieses;
       this.featurerelationsForChildfeatureid = featurerelationsForChildfeatureid;
    }
   
     @Id 

    
    @Column(name="featureofinterestid", unique=true, nullable=false)
    public long getFeatureofinterestid() {
        return this.featureofinterestid;
    }
    
    public void setFeatureofinterestid(long featureofinterestid) {
        this.featureofinterestid = featureofinterestid;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codespaceid")
    public Codespace getCodespace() {
        return this.codespace;
    }
    
    public void setCodespace(Codespace codespace) {
        this.codespace = codespace;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="featureofinteresttypeid", nullable=false)
    public Featureofinteresttype getFeatureofinteresttype() {
        return this.featureofinteresttype;
    }
    
    public void setFeatureofinteresttype(Featureofinteresttype featureofinteresttype) {
        this.featureofinteresttype = featureofinteresttype;
    }

    
    @Column(name="hibernatediscriminator", nullable=false, length=1)
    public char getHibernatediscriminator() {
        return this.hibernatediscriminator;
    }
    
    public void setHibernatediscriminator(char hibernatediscriminator) {
        this.hibernatediscriminator = hibernatediscriminator;
    }

    
    @Column(name="identifier", unique=true)
    public String getIdentifier() {
        return this.identifier;
    }
    
    public void setIdentifier(String identifier) {
        this.identifier = identifier;
    }

    
    @Column(name="name")
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="geom")
    public Serializable getGeom() {
        return this.geom;
    }
    
    public void setGeom(Serializable geom) {
        this.geom = geom;
    }

    
    @Column(name="descriptionxml")
    public String getDescriptionxml() {
        return this.descriptionxml;
    }
    
    public void setDescriptionxml(String descriptionxml) {
        this.descriptionxml = descriptionxml;
    }

    
    @Column(name="url", unique=true)
    public String getUrl() {
        return this.url;
    }
    
    public void setUrl(String url) {
        this.url = url;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="featureofinterest")
    public Set getRelatedfeatures() {
        return this.relatedfeatures;
    }
    
    public void setRelatedfeatures(Set relatedfeatures) {
        this.relatedfeatures = relatedfeatures;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="unresolved")
    public Set getFeaturerelationsForParentfeatureid() {
        return this.featurerelationsForParentfeatureid;
    }
    
    public void setFeaturerelationsForParentfeatureid(Set featurerelationsForParentfeatureid) {
        this.featurerelationsForParentfeatureid = featurerelationsForParentfeatureid;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="featureofinterest")
    public Set getResulttemplates() {
        return this.resulttemplates;
    }
    
    public void setResulttemplates(Set resulttemplates) {
        this.resulttemplates = resulttemplates;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="featureofinterest")
    public Set getSerieses() {
        return this.serieses;
    }
    
    public void setSerieses(Set serieses) {
        this.serieses = serieses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="unresolved")
    public Set getFeaturerelationsForChildfeatureid() {
        return this.featurerelationsForChildfeatureid;
    }
    
    public void setFeaturerelationsForChildfeatureid(Set featurerelationsForChildfeatureid) {
        this.featurerelationsForChildfeatureid = featurerelationsForChildfeatureid;
    }




}


